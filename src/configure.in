dnl Process this file with autoconf to produce a configure script.
AC_INIT(xferstats.c)

test -z "$CFLAGS" && CFLAGS="-Wall -O3 -g -Wstrict-prototypes"

dnl Checks for programs.
AC_PROG_CC
AC_PATH_PROG(INSTALL, install, install)

dnl Checks for header files.
AC_HEADER_STDC
AC_CONFIG_HEADER(config.h)

dnl The bits for our command-line arguments
AC_ARG_WITH(glib, [  --with-glib=DIR          Use uninstalled copy of glib])
smfs=no
AC_ARG_ENABLE(smfs,
	[  --enable-smfs		   Sacrifice memory for speed],
	[if test x$enable_smfs = xyes; then
		AC_DEFINE(SMFS,)
		smfs=yes
	else
		smfs=no
	fi],
)
AC_ARG_WITH(efence,
	[  --with-efence		   Compile with ElectricFence for debugging],
	if test x$withval = xyes; then
		AC_CHECK_LIB(efence,malloc,
			LIBS="$LIBS -lefence",
			[AC_MSG_WARN([ElectricFence not found--it will not be used.])]
		)
	fi
)
AC_ARG_ENABLE(debug_flow,
	[  --enable-debug_flow	   Debugging information about program execution],
	if test x$enable_debug_flow = xyes; then
		AC_DEFINE(DEBUGS,)
	fi
)
AC_ARG_ENABLE(debug1,
	[  --enable-debug1	   Debug level 1],
	if test x$enable_debug1 = xyes; then
		AC_DEFINE(DEBUG,)
	fi
)
AC_ARG_ENABLE(debug2,
	[  --enable-debug2	   Debug level 2],
	if test x$enable_debug2 = xyes; then
		AC_DEFINE(DEBUG2,)
	fi
)
AC_ARG_ENABLE(debug3,
	[  --enable-debug_parser	   Debug xferlog parsing],
	if test x$enable_debug_parser = xyes; then
		AC_DEFINE(DEBUG3,)
	fi
)

AC_CHECK_HEADERS(unistd.h)
if test x$ac_cv_header_unistd_h = xno; then
	AC_MSG_ERROR([xferstats requires unistd.h in order to compile.])
fi
AC_CHECK_HEADERS(fcntl.h)
if test x$ac_cv_header_fcntl_h = xno; then
	AC_MSG_ERROR([xferstats requires fcntl.h in order to compile.])
fi
AC_CHECK_HEADERS(string.h)
if test x$ac_cv_header_string_h = xno; then
	AC_MSG_ERROR([xferstats requires string.h in order to compile.])
fi
AC_CHECK_HEADERS(ctype.h)
if test x$ac_cv_header_ctype_h = xno; then
	AC_MSG_ERROR([xferstats requires ctype.h in order to compile.])
fi
AC_CHECK_HEADERS(sys/types.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_SIZE_T

AC_CHECK_SIZEOF(__ptr_t,0)
if test $ac_cv_sizeof___ptr_t = 0
then
	AC_DEFINE(__ptr_t, char *)
fi


AC_MSG_CHECKING([for longlong])
AC_TRY_COMPILE(,void main(){sizeof(longlong);},longlong=8,longlong=0)
if test $longlong = 8
then
	AC_MSG_RESULT([yes.  Excellent, a 64 bit type.])
	AC_DEFINE(LONGLONG,long long)
else
	AC_MSG_RESULT([no.  No matter, we can try others])
	AC_MSG_CHECKING([for long long])
	AC_TRY_COMPILE(,void main(){sizeof(long long);},longlong=8,longlong=0)
	if test $longlong = 8
	then
		AC_MSG_RESULT([yes.  Excellent, a 64 bit type.])
		AC_DEFINE(LONGLONG,long long)
	else
		AC_MSG_RESULT([	Erk, no long long.  Using long instead.])
		AC_DEFINE(LONGLONG, long)
		AC_DEFINE(BROKEN_LL)
	fi
fi

dnl Check for MMAP
AC_FUNC_MMAP

dnl AIX fails the mmap test, but has good enough mmap for our purposes (in my
dnl experience)
if test x$ac_cv_func_mmap_fixed_mapped = xno; then
	AC_CACHE_CHECK([for AIX], xt_cv_aix,
		[AC_EGREP_CPP(yes,
		 [#ifdef _AIX
		    yes
		  #endif
		 ],
		 xt_cv_aix=yes,
		 xt_cv_aix=no)])
	if test $xt_cv_aix = yes; then
		AC_MSG_WARN([configure can't find mmap, but I'll force it since this is AIX])
		AC_DEFINE(HAVE_MMAP,)
		ac_cv_func_mmap_fixed_mapped=yes
	fi
fi

dnl Ditto for HPUX
if test x$ac_cv_func_mmap_fixed_mapped = xno; then
	AC_CACHE_CHECK([for HPUX], xt_cv_hpux,
		[AC_EGREP_CPP(yes,
		 [#define _HPUX_SOURCE
		  #include <sys/stdsyms.h>
		  #ifdef _INCLUDE_HPUX_SOURCE
		    yes
		  #endif
		 ],
		 xt_cv_hpux=yes,
		 xt_cv_hpux=no)])

	if test $xt_cv_hpux = no; then
		AC_MSG_RESULT([	ok, I'll survive without mmap])
	else
		AC_MSG_WARN([configure can't find mmap, but I'll force it since this is HPUX])
		AC_DEFINE(HAVE_MMAP,)
		ac_cv_func_mmap_fixed_mapped = yes
	fi
fi

if test x$with_glib = xyes ; then
  AC_MSG_ERROR([
*** Directory must be specified for --with-glib])
fi

if test x$with_glib = x ; then
  # Look for separately installed glib

  AM_PATH_GLIB(1.1.3,,
    AC_MSG_ERROR([
*** GLIB 1.1.3 or better is required. The latest version of GLIB
*** is always available from ftp://ftp.gtk.org.]),
    gmodule)

  glib_cflags=$GLIB_CFLAGS
  glib_libs=$GLIB_LIBS
else
  # Use uninstalled glib (assume they got the version right)

  if test -x $with_glib/glib-config ; then
    :
  else
    AC_MSG_ERROR([GLIB directory ($with_glib) not present or not configured])
  fi

  # For use in gtk-config
  glib_cflags=`$with_glib/glib-config --cflags`
  glib_libs=`$with_glib/glib-config --libs`

  glib_release=`$with_glib/glib-config --version | sed 's%\\.[[0-9]]*$%%'`

  # canonicalize relative paths
  case $with_glib in
    /*)
      glib_dir=$with_glib
      ;;
    *)
      glib_dir="\$(top_builddir)/$with_glib"
      ;;
  esac

  GLIB_CFLAGS="-I$glib_dir"
  GLIB_LIBS=$glib_dir/libglib-$glib_release.la

  AC_SUBST(GLIB_CFLAGS)
  AC_SUBST(GLIB_LIBS)
fi


AC_CHECK_FUNCS(strchr strcasecmp)
if test $ac_cv_func_strchr = no; then
	AC_MSG_WARN([xferstats requires a working strchr])
fi

AC_CACHE_CHECK([for DEC unix], xt_cv_dec,
	[AC_EGREP_CPP(yes,
	 [#include <dec/prf/prof.h>
	  #ifdef _DEC_PRF_PROF_H_
	    yes
	  #endif
	 ],
	 xt_cv_dec=yes,
	 xt_cv_dec=no)])

if test $xt_cv_dec = yes; then
	AC_MSG_RESULT([	Fixing DEC longlong brokenness])
	AC_DEFINE(IS_DEC,)
fi

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AC_OUTPUT(Makefile)

echo "
Configuration:

  Compiler:		${CC}
  Compiler flags:	${CFLAGS}
  System type:		${target_os}
  Linker flags:         ${LDFLAGS}
  Libraries:            ${LIBS}
  #defines:             ${DEFS}
  CPP flags:		${CPPFLAGS}"
